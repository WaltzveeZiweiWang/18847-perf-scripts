#18 services
version: "3"
services:
  consul:
    image: consul:latest
    ports:
      - "8300:8300"
      - "8400:8400"
      - "8500:8500"
      - "8600:53/udp"
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      resources:
        limits:
          cpus: ${consul_cpu}
          memory: ${consul_memory}
      placement:
        constraints: ["${consul_placement}"]

  frontend:
    environment:
      - TLS
    image: igorrudyk1/hotel_reserv_frontend_single_node:latest
    entrypoint: frontend
    ports:
      - "5000:5000"
    depends_on:
      - consul
    deploy:
      replicas: 3
      restart_policy:
        condition: any
      resources:
        limits:
          cpus: ${frontend_cpu}
          memory: ${frontend_memory}
      placement:
        constraints: ["${frontend_placement}"]

  profile:
    environment:
      - TLS
    image: igorrudyk1/hotel_reserv_profile_single_node:latest
    entrypoint: profile
    depends_on:
      - mongodb-profile
      - memcached-profile
      - consul
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      resources:
        limits:
          cpus: ${profile_cpu}
          memory: ${profile_memory}
      placement:
        constraints: ["${profile_placement}"]

  search:
    image: igorrudyk1/hotel_reserv_search_single_node:latest
    entrypoint: search
    depends_on:
      - consul
    environment:
      - TLS
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      resources:
        limits:
          cpus: ${search_cpu}
          memory: ${search_memory}
      placement:
        constraints: ["${search_placement}"]

  geo:
    environment:
      - TLS
    image: igorrudyk1/hotel_reserv_geo_single_node:latest
    entrypoint: geo
    depends_on:
      - mongodb-geo
      - consul
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      resources:
        limits:
          cpus: ${geo_cpu}
          memory: ${geo_memory}
      placement:
        constraints: ["${geo_placement}"]
      

  rate:
    environment:
      - TLS
    image: igorrudyk1/hotel_reserv_rate_single_node:latest
    entrypoint: rate
    depends_on:
      - mongodb-rate
      - memcached-rate
      - consul
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      resources:
        limits:
          cpus: ${rate_cpu}
          memory: ${rate_memory}
      placement:
        constraints: ["${rate_placement}"]

  recommendation:
    environment:
      - TLS
    image: igorrudyk1/hotel_reserv_recommendation_single_node:latest
    entrypoint: recommendation
    depends_on:
      - mongodb-recommendation
      - consul
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      resources:
        limits:
          cpus: ${recommendation_cpu}
          memory: ${recommendation_memory}
      placement:
        constraints: ["${recommendation_placement}"]

  user:
    environment:
      - TLS
    image: igorrudyk1/hotel_reserv_user_single_node:latest
    entrypoint: user
    depends_on:
      - mongodb-user
      - consul
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      resources:
        limits:
          cpus: ${user_cpu}
          memory: ${user_memory}
      placement:
        constraints: ["${user_placement}"]

  reservation:
    environment:
      - TLS
    image: igorrudyk1/hotel_reserv_reserve_single_node:latest
    entrypoint: reservation
    depends_on:
      - mongodb-reservation
      - memcached-reserve
      - consul
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      resources:
        limits:
          cpus: ${reservation_cpu}
          memory: ${reservation_memory}
      placement:
        constraints: ["${reservation_placement}"]

      

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "14269"
      - "5778:5778"
      - "14268:14268"
      - "14267"
      - "16686:16686"
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      resources:
        limits:
          cpus: ${jaeger_cpu}
          memory: ${jaeger_memory}
      placement:
        constraints: ["${jaeger_placement}"]


  memcached-rate:
    image: memcached
    hostname: user-memcached
    environment:
      - MEMCACHED_CACHE_SIZE=128
      - MEMCACHED_THREADS=2
    logging:
      options:
        max-size: 50m
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      resources:
        limits:
          cpus: ${memcached_rate_cpu}
          memory: ${memcached_rate_memory}
      placement:
        constraints: ["${memcached_rate_placement}"]


  memcached-profile:
    image: memcached
    hostname: user-memcached
    environment:
      - MEMCACHED_CACHE_SIZE=128
      - MEMCACHED_THREADS=2
    logging:
      options:
        max-size: 50m
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      resources:
        limits:
          cpus: ${memcached_profile_cpu}
          memory: ${memcached_profile_memory}
      placement:
        constraints: ["${memcached_profile_placement}"]
      

  memcached-reserve:
    image: memcached
    hostname: user-memcached
    environment:
      - MEMCACHED_CACHE_SIZE=128
      - MEMCACHED_THREADS=2
    logging:
      options:
        max-size: 50m
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      resources:
        limits:
          cpus: ${memcached_reserve_cpu}
          memory: ${memcached_reserve_memory}
      placement:
        constraints: ["${memcached_reserve_placement}"]

  mongodb-geo:
    image: mongo:4.4.6
    hostname: geo-db
    volumes:
      - geo:/data/db
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      resources:
        limits:
          cpus: ${mongodb_geo_cpu}
          memory: ${mongodb_geo_memory}
      placement:
        constraints: ["${mongodb_geo_placement}"]

  mongodb-profile:
    image: mongo:4.4.6
    hostname: profile-db
    volumes:
      - profile:/data/db
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      resources:
        limits:
          cpus: ${mongodb_profile_cpu}
          memory: ${mongodb_profile_memory}
      placement:
        constraints: ["${mongodb_profile_placement}"]
  mongodb-rate:
    image: mongo:4.4.6
    hostname: rate-db
    volumes:
      - rate:/data/db
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      resources:
        limits:
          cpus: ${mongodb_rate_cpu}
          memory: ${mongodb_rate_memory}
      placement:
        constraints: ["${mongodb_rate_placement}"]

  mongodb-recommendation:
    image: mongo:4.4.6
    hostname: recommendation-db
    volumes:
      - recommendation:/data/db
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      resources:
        limits:
          cpus: ${mongodb_recommendation_cpu}
          memory: ${mongodb_recommendation_memory}
      placement:
        constraints: ["${mongodb_recommendation_placement}"]

  mongodb-reservation:
    image: mongo:4.4.6
    hostname: reservation-db
    volumes:
      - reservation:/data/db
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      resources:
        limits:
          cpus: ${mongodb_reservation_cpu}
          memory: ${mongodb_reservation_memory}
      placement:
        constraints: ["${mongodb_reservation_placement}"]

  mongodb-user:
    image: mongo:4.4.6
    hostname: user-db
    volumes:
      - user:/data/db
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      resources:
        limits:
          cpus: ${mongodb_user_cpu}
          memory: ${mongodb_user_memory}
      placement:
        constraints: ["${mongodb_user_placement}"]

volumes:
  geo:
  profile:
  rate:
  recommendation:
  reservation:
  user:
  